ТЕХНИЧЕСКОЕ ЗАДАНИЕ Веб-платформа СРО НОСО (MVP) Версия 3.0 от [Дата утверждения]
--------------------------------------------------------------------------------
1. Цель и контекстСоздать минимально жизнеспособный продукт (MVP) веб-платформы для членов Саморегулируемой организации «СРО НОСО» с ключевыми функциями:Авторизация по ИНН: Проверка пользователя через официальный реестр СРО.
Каталог открытых документов: Просмотр, поиск, сортировка и скачивание документов СРО.
ИИ-консультант: Интерактивный помощник на основе ИИ (DeepSeek) для ответов на вопросы по деятельности СРО.
Личный кабинет: Просмотр профиля и статуса членства.
Система обратной связи: Возможность отправки тикетов поддержки.
Будущие функции: Подписки, уведомления, расширенная админка, локализация. --------------------------------------------------------------------------------
2. Функциональные требования (пользовательские сценарии)2.1 Регистрация и входURL: /login (отдельная страница для входа).
Вход по ИНН: Пользователь вводит ИНН (10 или 12 цифр) в специальное поле на странице /login.
Проверка ИНН: При отправке формы ИНН проверяется через Edge Function /verify-inn, которая парсит официальный реестр СРО.
Логика входа:
Если ИНН найден и действителен: Создается или обновляется запись пользователя в таблице users Supabase. Пользователь аутентифицируется в системе Supabase Auth и получает роль member. Он перенаправляется в свой личный кабинет (/profile).
Если ИНН не найден/недействителен: Отображается сообщение об ошибке.
Ограничения:
Лимит попыток входа: Для одного ИНН допускается не более 5 попыток входа в течение 10 минут. Это ограничение реализуется как на клиентской стороне (валидация ИНН), так и на серверной (через Edge Function /verify-inn и таблицу daily_limits).
Роли:
guest (Гость): Назначается пользователю по умолчанию, если он не прошёл аутентификацию.
member (Член СРО): Назначается пользователю после успешной проверки ИНН.
admin (Администратор): Отложенная роль для будущего функционала.
Кнопка "Войти": На всех страницах для неаутентифицированных пользователей отображается кнопка "Войти", ведущая на /login.
2.2 Просмотр профиляURL: /profile (доступна только авторизованным пользователям с ролью member).
Содержание:
ИНН: Отображается ИНН пользователя.
Название организации: Отображается полное наименование организации или ИП.
Статус членства: Отображается цветной бейдж со статусом:
🟢 Действует: Если дата окончания членства в будущем.
🟡 Истекает: Если дата окончания членства в ближайшие 30 дней.
🔴 Истёк: Если дата окончания членства в прошлом или отсутствует.
Дата окончания членства: Отображается дата окончания членства в формате DD.MM.YYYY.
Инструкция: Если статус "Истёк", отображается инструкция: "Членство приостановлено. Обратитесь в СРО для восстановления."
2.3 Каталог документовURL: /documents (доступен всем пользователям).
Доступность документов:
Гости (guest): Видят только документы с флагом is_public = true.
Члены СРО (member): Видят все документы.
Загрузка документов: Список документов загружается из таблицы documents в Supabase с использованием REST API (GET /documents?select=...&order=updated_at.desc).
Пагинация: Реализована "бесконечная" прокрутка или кнопка "Показать ещё 20", загружающая следующую порцию документов.
Карточка документа:
Иконка: Отображается иконка типа файла (PDF, DOCX).
Название: Отображается название документа (ограничено по количеству строк).
Дата обновления: Отображается дата последнего обновления в формате DD.MM.YYYY.
Размер файла: Отображается размер файла в человекочитаемом формате (KB, MB).
Кнопки:
"Просмотреть":
Для PDF: Открывается в модальном окне с использованием PDF.js.
Для DOCX: Открывается в новой вкладке с использованием Google Docs Viewer.
"Скачать": Открывается прямая ссылка на файл в Supabase Storage (public bucket documents).
Поиск: Реализовано поле поиска по названию документа. Поиск осуществляется с задержкой (debounce 300 мс) и использует оператор ilike на стороне Supabase.
Сортировка: Реализован выпадающий список для сортировки:
Сначала новые: Сортировка по updated_at по убыванию (по умолчанию).
Сначала старые: Сортировка по updated_at по возрастанию.
2.4 ИИ-консультантURL: /ask-ai (доступен всем пользователям).
Ввод: Пользователь вводит текстовый вопрос в поле ввода.
Ограничения длины вопроса:
Гость (guest): Максимум 500 символов.
Член СРО (member): Максимум 2000 символов.
Лимиты запросов:
Гость (guest): Максимум 3 запроса в сутки. Лимит отслеживается через таблицу daily_limits и Edge Function increment_guest_question.
Член СРО (member): Без ограничений по количеству запросов в сутки.
История чата:
Гость (guest): История сохраняется в localStorage браузера.
Член СРО (member): История сохраняется в таблицах chat_sessions и chat_messages в Supabase.
Отправка вопроса: Вопрос отправляется через Edge Function POST /ask.
Ответы: Ответы от ИИ отображаются в формате Markdown (без поддержки ссылок на источники).
Обратная связь по сообщениям: (Отложено для MVP) Кнопки "Помогло"/"Не помогло" под каждым ответом ИИ для сбора метрик.
2.5 Управление членствомИнтеграция: Функционал интегрирован в страницу личного кабинета /profile.
Отображение: Отображается статус членства и дата окончания, как описано в п. 2.2.
Инструкция: При статусе "Истёк" отображается инструкция "Членство приостановлено. Обратитесь в СРО для восстановления."
Кнопка "Продлить/Восстановить": (Отложено для MVP).
2.6 Обратная связь и помощьURL: /help (доступна всем пользователям).
Содержание:
Аккордеон FAQ: (Отложено для MVP) Список часто задаваемых вопросов.
Блок контактов: Отображаются контактные данные СРО.
Форма обратной связи:
Тема: Выпадающий список с вариантами (Техническая проблема, Предложение по улучшению, Вопрос по функциональности, Другое).
Описание: Текстовое поле (textarea) для ввода сообщения.
Скриншот: (Опционально) Поле для загрузки изображения (<input type="file" accept="image/*">), максимальный размер 5 МБ.
Email: (Опционально) Поле для ввода email. Для авторизованных пользователей предзаполняется из профиля.
reCAPTCHA v3: (Отложено для MVP) Обязательная защита от ботов.
Чекбокс согласия: (Отложено для MVP, но упомянуто в обсуждениях) Обязательный чекбокс согласия с политикой конфиденциальности.
Отправка: (Отложено для MVP) В MVP отправка реализуется через клиентский вызов Supabase DB (supabase.from('support_tickets').insert(...)). В будущем будет реализована через Edge Function POST /report-issue.
Ответ: Отображается уведомление (toast): "Спасибо! Мы ответим в течение 1 рабочего дня." --------------------------------------------------------------------------------
3. Роли и права 
Гость (guest)
 Доступ только к публичным документам и ограниченный доступ к ИИ-консультанту (≤3 вопроса/день).
Член СРО (member)
 Полный доступ ко всем функциям платформы.
Админ (admin)
 (Отложено) Управление документами, просмотр и обработка тикетов поддержки.
--------------------------------------------------------------------------------
4. Технический стек (MVP)Frontend:
Язык: TypeScript.
Библиотека: React 18.
Стилизация: Tailwind CSS.
Сборщик: Vite.
Маршрутизация: react-router-dom.
Управление состоянием: React Context API, пользовательские хуки.
UI-компоненты: Самописные компоненты (Button, Input, Toast, Modal и др.).
Backend:
Платформа: Supabase.
База данных: PostgreSQL.
Аутентификация: Supabase Auth.
Хранилище: Supabase Storage.
Edge Functions: Deno Functions для выполнения серверной логики (проверка ИНН, ИИ-запросы, лимиты, отправка тикетов).
ИИ:
Провайдер: DeepSeek API (интеграция через Edge Function).
Хостинг:
Frontend: GitHub Pages.
Backend (Supabase): Облако Supabase.
CI/CD:
Платформа: GitHub Actions.
Аналитика:
Сервис: Plausible Analytics (скрипт подключается в index.html).
Мониторинг ошибок:
Сервис: Sentry (инициализация в main.tsx).
--------------------------------------------------------------------------------
5. Требования к безопасности и конфиденциальностиХранение данных:
Данные пользователей: Хранятся в таблице users Supabase. Доступ контролируется через Row Level Security (RLS).
Документы: Хранятся в Supabase Storage в бакете documents.
Чаты: Хранятся в таблицах chat_sessions и chat_messages Supabase. Доступ контролируется через RLS.
Лимиты: Хранятся в таблице daily_limits Supabase.
Тикеты поддержки: Хранятся в таблице support_tickets Supabase.
Локальное хранилище: Используется localStorage браузера для хранения настроек интерфейса, истории чата ИИ (для гостей) и счетчика лимита гостевых запросов ИИ. Эта информация хранится только на устройстве пользователя.
Политика конфиденциальности: Страница /privacy с подробным описанием сбора и использования данных.
reCAPTCHA: (Отложено) Будет использоваться для защиты формы обратной связи. --------------------------------------------------------------------------------
6. Требования к производительности и SEOПроизводительность: Оптимизация загрузки страниц и ресурсов. Использование CDN (через GitHub Pages и Supabase).
SEO:
Уникальные метаданные: Каждая страница имеет уникальный <title> и <meta name="description">.
Файлы robots.txt и sitemap.xml: Статические файлы или генерируются скриптом при сборке. --------------------------------------------------------------------------------
7. Требования к дизайнуФирменные цвета:
Основной: #0057B8 (синий).
Акцентный: #16A34A (зеленый).
Текст: #111827 (темно-серый).
Статусы членства:
Действует: #16A34A (зеленый).
Истекает: #FACC15 (желтый).
Истёк: #EF4444 (красный).
Шрифт: Inter.
Адаптивность: Дизайн должен корректно отображаться на различных устройствах (десктоп, планшет, мобильный). --------------------------------------------------------------------
8. Требования к документации и сопровождениюREADME.md: Файл в корне репозитория с описанием проекта, инструкциями по установке, настройке и запуску.
Комментарии в коде: Код должен быть снабжен комментариями, объясняющими сложную логику.
Логирование: Использование console.log, console.error для отладки и мониторинга ошибок (интеграция с Sentry). --------------------------------------------------------------------------------
9. Критерии приёмки MVP2.1 Регистрация и вход:
Критерий приёмки: Открытие /login показывает форму входа. Ввод корректного ИНН перенаправляет в /profile.
2.2 Просмотр профиля:
Критерий приёмки: Открытие /profile показывает ИНН, название, статус и дату окончания.
2.3 Каталог документов:
Критерий приёмки: Открытие /documents показывает список документов. Поиск и сортировка работают. Кнопки "Просмотреть" и "Скачать" функционируют.
2.4 ИИ-консультант:
Критерий приёмки: Открытие /ask-ai показывает интерфейс чата. Отправка вопроса получает ответ от ИИ. Лимиты работают.
2.5 Управление членством:
Критерий приёмки: Статус и дата окончания отображаются в /profile.
2.6 Обратная связь:
Критерий приёмки: Открытие /help показывает страницу с формой. Отправка формы создаёт запись в support_tickets. --------------------------------------------------------------------------------
10. Дополнительные функции (отложены для MVP)Подписки на документы.
Push-уведомления.
Расширенная админка.
Версионирование документов.
Локализация (i18n).
Интеграция reCAPTCHA v3.
Чекбокс согласия в форме поддержки.
FAQ в /help.
Обратная связь по сообщениям ИИ.
Кнопка "Продлить/Восстановить" в профиле.
Мониторинг доступности реестра СРО.
--------------------------------------------------------------------------------
11. Структура базы данных (Supabase)(Подробная схема таблиц, полей, типов, ограничений и связей, как обсуждалось ранее и представлено в sro-noso-web-main.md).
--------------------------------------------------------------------------------
12. CI/CD Pipeline(Подробное описание workflow GitHub Actions, как обсуждалось ранее и представлено в sro-noso-web-main.md).
--------------------------------------------------------------------------------
13. Структура репозитория(Подробное описание структуры файлов и папок, как обсуждалось ранее и представлено в Структура репозитория вэб.docx и sro-noso-web-main.md).
--------------------------------------------------------------------------------
14. Дата релиза MVPПлан — 2-3 недели с момента подтверждения ТЗ и создания репозитория.
--------------------------------------------------------------------------------
Утверждаю: [Ваше имя] ___________________ [Дата]
